*****************************************************************************
                               Reflection
                             Workshop - #5
Full Name  : Datmehar Singh
Student ID#: 108011214
Email      : datmehar-singh@myseneca.ca
Section    : NHH

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************

Q1. Mapping the month integer value to the first three characters of the month name could have been accomplished using one of two possible selection constructs. What are they, and provide a short example of how each would be written in C to display the last two months?
A1. This could have been done with the two selection constructs which are if...else if and switch..case.
In this case, switchcase  was a good choice as it would make the code more readable as well as what I could understand from the geeks for geeks link-(   https://www.geeksforgeeks.org/switch-vs-else/  ), switch case uses hash list which uses a hash function to map the value by using a simple modulo once (mostly) by a prime number which makes it even faster than a else if construct. 
Although, even hashing can take much more time when it has to chain its outcome but 60% of the time, it needs only one calculation. 

Examples - 
Using 
if construct:
If(inputMonth==11)
            if (!i % 10)
                printf("\n%d-NOV-0%d\n", inputYear, i);
            else
                printf("\n%d-NOV-%d\n", inputYear, i);
else if(inputMonth==12)
            if (!i % 10)
                printf("\n%d-DEC-0%d\n", inputYear, i);
            else
                printf("\n%d-DEC-%d\n", inputYear, i);
switch case :
switch(inpuutMonth) 
{
 case 11:
            if (!i % 10)
                printf("\n%d-NOV-0%d\n", inputYear, i);
            else
                printf("\n%d-NOV-%d\n", inputYear, i);

            break;
        case 12:
            if (!i % 10)
                printf("\n%d-DEC-0%d\n", inputYear, i);
            else
                printf("\n%d-DEC-%d\n", inputYear, i);

            break;
}
____________________________________________________________________________________________________________________________________________________________

Q2. The logic applied to validate the values entered by the user required iteration. What are the 3 types of iteration constructs? What one did you use for the validation routines, and briefly explain why? 
A2. The logic applied to validate the value entered by the user is by using the iteration construct, while which is operated by the use of a flag value which when altered, takes the program out of the loop.
The three types of iteration constructs are while(), do while() and for(). I used the while iteration construct as making the use of a flag variable is easy in that one and seems illogical in the for loop and in do while too.
In that I used a flag int variable which was altered when breaks the loop without the use break as it is not a good practice to use break, continue and goto.
____________________________________________________________________________________________________________________________________________________________

Q3. Describe what you did to test and debug your program. How did you go about finding where the problems were located (explain how you did this for both syntactic and semantic problems)? 
A3. I broke the problem down into simpler, smaller chunks which are easy to debug. Further, I review all the potential sources of error. Then after that I try to fix that firstly by looking for the errors and 90% of the time it is resolved by this. For the 10% of the times I use Printf to get the value of erroneous variable which mostly solves the problem.




